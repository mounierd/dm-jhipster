application {
  config {
    applicationType monolith
    authenticationType jwt
    baseName blog
    blueprints []
    buildTool maven
    cacheProvider ehcache
    clientFramework vue
    clientPackageManager npm
    clientTheme solar
    clientThemeVariant primary
    creationTimestamp 1678103555290
    databaseType sql
    devDatabaseType h2Disk
    dtoSuffix DTO
    enableGradleEnterprise false
    enableHibernateCache true
    enableSwaggerCodegen false
    enableTranslation true
    gradleEnterpriseHost ""
    jhiPrefix jhi
    jhipsterVersion "7.9.3"
    jwtSecretKey "ZTNjNjFlZTJlZGQwOGNiZTNjYzUyYjJkMTBlYzY2NTk1YmMyN2ZlY2NmOWZkMzlmMzcwMGVmNjJmZGYyZjNhNTRhZGUyNDBlODliOWYwNmM4Mzg4OGU2OWEwYjM3NzU0MjY5YTBlOTUxYjIzOTc3MzNmNTVlNGVjYWI1MTk4MTU="
    languages [fr]
    messageBroker false
    microfrontend false
    microfrontends []
    nativeLanguage fr
    otherModules []
    packageName polytech.info.gl
    prodDatabaseType postgresql
    reactive false
    searchEngine false
    serverPort 8080
    serviceDiscoveryType no
    skipClient false
    skipUserManagement false
    testFrameworks []
    websocket false
    withAdminUi true
  }

  entities Car, Cart, Client, Command, Cooperative, Driver, Shop
}

entity Car
entity Cart {
  amount Float required min(0)
  deadline Float required
}
entity Client {
  idClient String required
  firstnameClient String required maxlength(30) pattern(/^[A-Z][a-z]+$/)
  lastnameClient String required maxlength(30) pattern(/^[A-Z][a-z]+$/)
  emailClient String required maxlength(50) pattern(/^([a-zA-Z0-9_\-\\.]+)@([a-zA-Z0-9_\-\\.]+)\\.([a-zA-Z]{2,5})$/)
  phoneCountryCodeClient Integer
  phoneClient Integer
  addressC String required maxlength(100)
}
entity Command {
  addressClient String required
  dateClient String required
}
entity Cooperative {
  id String required
  name String required
}
entity Driver {
  firstnameDriver String required maxlength(30) pattern(/^[A-Z][a-z]+$/)
  lastnameDriver String required maxlength(30) pattern(/^[A-Z][a-z]+$/)
  phoneCountryCodeDriver Integer
  phoneDriver Integer
}
entity Shop {
  addressS String required
  menu String
}
relationship OneToOne {
  Cart{command} to Command{cart}
}
relationship OneToMany {
  Client{cart} to Cart{client}
  Shop{cart} to Cart{shop}
  Client{command} to Command{client}
  Driver{command} to Command{driver}
  Cooperative{driver} to Driver{cooperative}
}

dto Car, Cart, Client, Command, Cooperative, Driver, Shop with mapstruct
service Car, Cart, Client, Command, Cooperative, Driver, Shop with serviceClass
